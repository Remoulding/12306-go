// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: order/order_service.proto

package order_service

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryTicketOrderByOrderSnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderSn string `protobuf:"bytes,1,opt,name=orderSn,proto3" json:"orderSn,omitempty"`
}

func (x *QueryTicketOrderByOrderSnRequest) Reset() {
	*x = QueryTicketOrderByOrderSnRequest{}
	mi := &file_order_order_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTicketOrderByOrderSnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTicketOrderByOrderSnRequest) ProtoMessage() {}

func (x *QueryTicketOrderByOrderSnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTicketOrderByOrderSnRequest.ProtoReflect.Descriptor instead.
func (*QueryTicketOrderByOrderSnRequest) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{0}
}

func (x *QueryTicketOrderByOrderSnRequest) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

type QueryTicketOrderByOrderSnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*TicketOrderDetail `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryTicketOrderByOrderSnResponse) Reset() {
	*x = QueryTicketOrderByOrderSnResponse{}
	mi := &file_order_order_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTicketOrderByOrderSnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTicketOrderByOrderSnResponse) ProtoMessage() {}

func (x *QueryTicketOrderByOrderSnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTicketOrderByOrderSnResponse.ProtoReflect.Descriptor instead.
func (*QueryTicketOrderByOrderSnResponse) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{1}
}

func (x *QueryTicketOrderByOrderSnResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryTicketOrderByOrderSnResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryTicketOrderByOrderSnResponse) GetData() []*TicketOrderDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageTicketOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int32  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size       int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	StatusType int32  `protobuf:"varint,4,opt,name=statusType,proto3" json:"statusType,omitempty"`
}

func (x *PageTicketOrderRequest) Reset() {
	*x = PageTicketOrderRequest{}
	mi := &file_order_order_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageTicketOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageTicketOrderRequest) ProtoMessage() {}

func (x *PageTicketOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageTicketOrderRequest.ProtoReflect.Descriptor instead.
func (*PageTicketOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{2}
}

func (x *PageTicketOrderRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageTicketOrderRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageTicketOrderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PageTicketOrderRequest) GetStatusType() int32 {
	if x != nil {
		return x.StatusType
	}
	return 0
}

type PageTicketOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *PageTicketOrderData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PageTicketOrderResponse) Reset() {
	*x = PageTicketOrderResponse{}
	mi := &file_order_order_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageTicketOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageTicketOrderResponse) ProtoMessage() {}

func (x *PageTicketOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageTicketOrderResponse.ProtoReflect.Descriptor instead.
func (*PageTicketOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{3}
}

func (x *PageTicketOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PageTicketOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageTicketOrderResponse) GetData() *PageTicketOrderData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageTicketOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int64                `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Records []*TicketOrderDetail `protobuf:"bytes,4,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *PageTicketOrderData) Reset() {
	*x = PageTicketOrderData{}
	mi := &file_order_order_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageTicketOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageTicketOrderData) ProtoMessage() {}

func (x *PageTicketOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageTicketOrderData.ProtoReflect.Descriptor instead.
func (*PageTicketOrderData) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{4}
}

func (x *PageTicketOrderData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageTicketOrderData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageTicketOrderData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageTicketOrderData) GetRecords() []*TicketOrderDetail {
	if x != nil {
		return x.Records
	}
	return nil
}

type TicketOrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderSn          string                        `protobuf:"bytes,1,opt,name=orderSn,proto3" json:"orderSn,omitempty"`
	UserId           string                        `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	TrainId          string                        `protobuf:"bytes,3,opt,name=trainId,proto3" json:"trainId,omitempty"`
	SeatType         string                        `protobuf:"bytes,4,opt,name=seatType,proto3" json:"seatType,omitempty"`
	DepartureDate    string                        `protobuf:"bytes,5,opt,name=departureDate,proto3" json:"departureDate,omitempty"`
	DepartureStation string                        `protobuf:"bytes,6,opt,name=departureStation,proto3" json:"departureStation,omitempty"`
	ArrivalStation   string                        `protobuf:"bytes,7,opt,name=arrivalStation,proto3" json:"arrivalStation,omitempty"`
	PassengerDetails []*TicketOrderPassengerDetail `protobuf:"bytes,8,rep,name=passengerDetails,proto3" json:"passengerDetails,omitempty"`
}

func (x *TicketOrderDetail) Reset() {
	*x = TicketOrderDetail{}
	mi := &file_order_order_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketOrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketOrderDetail) ProtoMessage() {}

func (x *TicketOrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketOrderDetail.ProtoReflect.Descriptor instead.
func (*TicketOrderDetail) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{5}
}

func (x *TicketOrderDetail) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *TicketOrderDetail) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TicketOrderDetail) GetTrainId() string {
	if x != nil {
		return x.TrainId
	}
	return ""
}

func (x *TicketOrderDetail) GetSeatType() string {
	if x != nil {
		return x.SeatType
	}
	return ""
}

func (x *TicketOrderDetail) GetDepartureDate() string {
	if x != nil {
		return x.DepartureDate
	}
	return ""
}

func (x *TicketOrderDetail) GetDepartureStation() string {
	if x != nil {
		return x.DepartureStation
	}
	return ""
}

func (x *TicketOrderDetail) GetArrivalStation() string {
	if x != nil {
		return x.ArrivalStation
	}
	return ""
}

func (x *TicketOrderDetail) GetPassengerDetails() []*TicketOrderPassengerDetail {
	if x != nil {
		return x.PassengerDetails
	}
	return nil
}

type PageSelfTicketOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int32  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	IdCard  string `protobuf:"bytes,3,opt,name=idCard,proto3" json:"idCard,omitempty"`
}

func (x *PageSelfTicketOrderRequest) Reset() {
	*x = PageSelfTicketOrderRequest{}
	mi := &file_order_order_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageSelfTicketOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSelfTicketOrderRequest) ProtoMessage() {}

func (x *PageSelfTicketOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSelfTicketOrderRequest.ProtoReflect.Descriptor instead.
func (*PageSelfTicketOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{6}
}

func (x *PageSelfTicketOrderRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageSelfTicketOrderRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageSelfTicketOrderRequest) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

type PageSelfTicketOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *PageSelfTicketOrderData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PageSelfTicketOrderResponse) Reset() {
	*x = PageSelfTicketOrderResponse{}
	mi := &file_order_order_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageSelfTicketOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSelfTicketOrderResponse) ProtoMessage() {}

func (x *PageSelfTicketOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSelfTicketOrderResponse.ProtoReflect.Descriptor instead.
func (*PageSelfTicketOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{7}
}

func (x *PageSelfTicketOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PageSelfTicketOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageSelfTicketOrderResponse) GetData() *PageSelfTicketOrderData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageSelfTicketOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Size    int64                    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total   int64                    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Records []*SelfTicketOrderDetail `protobuf:"bytes,4,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *PageSelfTicketOrderData) Reset() {
	*x = PageSelfTicketOrderData{}
	mi := &file_order_order_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageSelfTicketOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSelfTicketOrderData) ProtoMessage() {}

func (x *PageSelfTicketOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSelfTicketOrderData.ProtoReflect.Descriptor instead.
func (*PageSelfTicketOrderData) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{8}
}

func (x *PageSelfTicketOrderData) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageSelfTicketOrderData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageSelfTicketOrderData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageSelfTicketOrderData) GetRecords() []*SelfTicketOrderDetail {
	if x != nil {
		return x.Records
	}
	return nil
}

type SelfTicketOrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Departure      string `protobuf:"bytes,1,opt,name=departure,proto3" json:"departure,omitempty"`
	Arrival        string `protobuf:"bytes,2,opt,name=arrival,proto3" json:"arrival,omitempty"`
	RidingDate     string `protobuf:"bytes,3,opt,name=ridingDate,proto3" json:"ridingDate,omitempty"`
	TrainNumber    string `protobuf:"bytes,4,opt,name=trainNumber,proto3" json:"trainNumber,omitempty"`
	DepartureTime  string `protobuf:"bytes,5,opt,name=departureTime,proto3" json:"departureTime,omitempty"`
	ArrivalTime    string `protobuf:"bytes,6,opt,name=arrivalTime,proto3" json:"arrivalTime,omitempty"`
	SeatType       int32  `protobuf:"varint,7,opt,name=seatType,proto3" json:"seatType,omitempty"`
	CarriageNumber string `protobuf:"bytes,8,opt,name=carriageNumber,proto3" json:"carriageNumber,omitempty"`
	SeatNumber     string `protobuf:"bytes,9,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	RealName       string `protobuf:"bytes,10,opt,name=realName,proto3" json:"realName,omitempty"`
	TicketType     int32  `protobuf:"varint,11,opt,name=ticketType,proto3" json:"ticketType,omitempty"`
	Amount         int32  `protobuf:"varint,12,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SelfTicketOrderDetail) Reset() {
	*x = SelfTicketOrderDetail{}
	mi := &file_order_order_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelfTicketOrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfTicketOrderDetail) ProtoMessage() {}

func (x *SelfTicketOrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfTicketOrderDetail.ProtoReflect.Descriptor instead.
func (*SelfTicketOrderDetail) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{9}
}

func (x *SelfTicketOrderDetail) GetDeparture() string {
	if x != nil {
		return x.Departure
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetArrival() string {
	if x != nil {
		return x.Arrival
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetRidingDate() string {
	if x != nil {
		return x.RidingDate
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetTrainNumber() string {
	if x != nil {
		return x.TrainNumber
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetDepartureTime() string {
	if x != nil {
		return x.DepartureTime
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetArrivalTime() string {
	if x != nil {
		return x.ArrivalTime
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetSeatType() int32 {
	if x != nil {
		return x.SeatType
	}
	return 0
}

func (x *SelfTicketOrderDetail) GetCarriageNumber() string {
	if x != nil {
		return x.CarriageNumber
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *SelfTicketOrderDetail) GetTicketType() int32 {
	if x != nil {
		return x.TicketType
	}
	return 0
}

func (x *SelfTicketOrderDetail) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateTicketOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           int64                    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Username         string                   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	TrainId          int64                    `protobuf:"varint,3,opt,name=trainId,proto3" json:"trainId,omitempty"`
	Departure        string                   `protobuf:"bytes,4,opt,name=departure,proto3" json:"departure,omitempty"`
	Arrival          string                   `protobuf:"bytes,5,opt,name=arrival,proto3" json:"arrival,omitempty"`
	Source           int32                    `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"`
	OrderTime        string                   `protobuf:"bytes,7,opt,name=orderTime,proto3" json:"orderTime,omitempty"`
	RidingDate       string                   `protobuf:"bytes,8,opt,name=ridingDate,proto3" json:"ridingDate,omitempty"`
	TrainNumber      string                   `protobuf:"bytes,9,opt,name=trainNumber,proto3" json:"trainNumber,omitempty"`
	DepartureTime    string                   `protobuf:"bytes,10,opt,name=departureTime,proto3" json:"departureTime,omitempty"`
	ArrivalTime      string                   `protobuf:"bytes,11,opt,name=arrivalTime,proto3" json:"arrivalTime,omitempty"`
	TicketOrderItems []*TicketOrderCreateItem `protobuf:"bytes,12,rep,name=ticketOrderItems,proto3" json:"ticketOrderItems,omitempty"`
}

func (x *CreateTicketOrderRequest) Reset() {
	*x = CreateTicketOrderRequest{}
	mi := &file_order_order_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOrderRequest) ProtoMessage() {}

func (x *CreateTicketOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTicketOrderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateTicketOrderRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetTrainId() int64 {
	if x != nil {
		return x.TrainId
	}
	return 0
}

func (x *CreateTicketOrderRequest) GetDeparture() string {
	if x != nil {
		return x.Departure
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetArrival() string {
	if x != nil {
		return x.Arrival
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *CreateTicketOrderRequest) GetOrderTime() string {
	if x != nil {
		return x.OrderTime
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetRidingDate() string {
	if x != nil {
		return x.RidingDate
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetTrainNumber() string {
	if x != nil {
		return x.TrainNumber
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetDepartureTime() string {
	if x != nil {
		return x.DepartureTime
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetArrivalTime() string {
	if x != nil {
		return x.ArrivalTime
	}
	return ""
}

func (x *CreateTicketOrderRequest) GetTicketOrderItems() []*TicketOrderCreateItem {
	if x != nil {
		return x.TicketOrderItems
	}
	return nil
}

type TicketOrderCreateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarriageNumber string `protobuf:"bytes,1,opt,name=carriageNumber,proto3" json:"carriageNumber,omitempty"`
	SeatType       int32  `protobuf:"varint,2,opt,name=seatType,proto3" json:"seatType,omitempty"`
	SeatNumber     string `protobuf:"bytes,3,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	PassengerId    string `protobuf:"bytes,4,opt,name=passengerId,proto3" json:"passengerId,omitempty"`
	RealName       string `protobuf:"bytes,5,opt,name=realName,proto3" json:"realName,omitempty"`
	IdType         int32  `protobuf:"varint,6,opt,name=idType,proto3" json:"idType,omitempty"`
	IdCard         string `protobuf:"bytes,7,opt,name=idCard,proto3" json:"idCard,omitempty"`
	Phone          string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	Amount         int32  `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
	TicketType     int32  `protobuf:"varint,10,opt,name=ticketType,proto3" json:"ticketType,omitempty"`
}

func (x *TicketOrderCreateItem) Reset() {
	*x = TicketOrderCreateItem{}
	mi := &file_order_order_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketOrderCreateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketOrderCreateItem) ProtoMessage() {}

func (x *TicketOrderCreateItem) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketOrderCreateItem.ProtoReflect.Descriptor instead.
func (*TicketOrderCreateItem) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{11}
}

func (x *TicketOrderCreateItem) GetCarriageNumber() string {
	if x != nil {
		return x.CarriageNumber
	}
	return ""
}

func (x *TicketOrderCreateItem) GetSeatType() int32 {
	if x != nil {
		return x.SeatType
	}
	return 0
}

func (x *TicketOrderCreateItem) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *TicketOrderCreateItem) GetPassengerId() string {
	if x != nil {
		return x.PassengerId
	}
	return ""
}

func (x *TicketOrderCreateItem) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *TicketOrderCreateItem) GetIdType() int32 {
	if x != nil {
		return x.IdType
	}
	return 0
}

func (x *TicketOrderCreateItem) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *TicketOrderCreateItem) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *TicketOrderCreateItem) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TicketOrderCreateItem) GetTicketType() int32 {
	if x != nil {
		return x.TicketType
	}
	return 0
}

type CreateTicketOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTicketOrderResponse) Reset() {
	*x = CreateTicketOrderResponse{}
	mi := &file_order_order_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOrderResponse) ProtoMessage() {}

func (x *CreateTicketOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateTicketOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTicketOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTicketOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateTicketOrderResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CloseTickOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderSn string `protobuf:"bytes,1,opt,name=orderSn,proto3" json:"orderSn,omitempty"`
}

func (x *CloseTickOrderRequest) Reset() {
	*x = CloseTickOrderRequest{}
	mi := &file_order_order_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTickOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTickOrderRequest) ProtoMessage() {}

func (x *CloseTickOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTickOrderRequest.ProtoReflect.Descriptor instead.
func (*CloseTickOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{13}
}

func (x *CloseTickOrderRequest) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

type CloseTickOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CloseTickOrderResponse) Reset() {
	*x = CloseTickOrderResponse{}
	mi := &file_order_order_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseTickOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTickOrderResponse) ProtoMessage() {}

func (x *CloseTickOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTickOrderResponse.ProtoReflect.Descriptor instead.
func (*CloseTickOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{14}
}

func (x *CloseTickOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloseTickOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CloseTickOrderResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type CancelTickOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderSn string `protobuf:"bytes,1,opt,name=orderSn,proto3" json:"orderSn,omitempty"`
}

func (x *CancelTickOrderRequest) Reset() {
	*x = CancelTickOrderRequest{}
	mi := &file_order_order_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTickOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTickOrderRequest) ProtoMessage() {}

func (x *CancelTickOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTickOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelTickOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{15}
}

func (x *CancelTickOrderRequest) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

type CancelTickOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CancelTickOrderResponse) Reset() {
	*x = CancelTickOrderResponse{}
	mi := &file_order_order_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTickOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTickOrderResponse) ProtoMessage() {}

func (x *CancelTickOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTickOrderResponse.ProtoReflect.Descriptor instead.
func (*CancelTickOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{16}
}

func (x *CancelTickOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelTickOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelTickOrderResponse) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type TicketOrderPassengerDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatType       int32  `protobuf:"varint,1,opt,name=seatType,proto3" json:"seatType,omitempty"`
	CarriageNumber string `protobuf:"bytes,2,opt,name=carriageNumber,proto3" json:"carriageNumber,omitempty"`
	SeatNumber     string `protobuf:"bytes,3,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	RealName       string `protobuf:"bytes,4,opt,name=realName,proto3" json:"realName,omitempty"`
	IdType         int32  `protobuf:"varint,5,opt,name=idType,proto3" json:"idType,omitempty"`
	IdCard         string `protobuf:"bytes,6,opt,name=idCard,proto3" json:"idCard,omitempty"`
	TicketType     int32  `protobuf:"varint,7,opt,name=ticketType,proto3" json:"ticketType,omitempty"`
	Amount         int32  `protobuf:"varint,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Status         int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	StatusName     string `protobuf:"bytes,10,opt,name=statusName,proto3" json:"statusName,omitempty"`
}

func (x *TicketOrderPassengerDetail) Reset() {
	*x = TicketOrderPassengerDetail{}
	mi := &file_order_order_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketOrderPassengerDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketOrderPassengerDetail) ProtoMessage() {}

func (x *TicketOrderPassengerDetail) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketOrderPassengerDetail.ProtoReflect.Descriptor instead.
func (*TicketOrderPassengerDetail) Descriptor() ([]byte, []int) {
	return file_order_order_service_proto_rawDescGZIP(), []int{17}
}

func (x *TicketOrderPassengerDetail) GetSeatType() int32 {
	if x != nil {
		return x.SeatType
	}
	return 0
}

func (x *TicketOrderPassengerDetail) GetCarriageNumber() string {
	if x != nil {
		return x.CarriageNumber
	}
	return ""
}

func (x *TicketOrderPassengerDetail) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *TicketOrderPassengerDetail) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *TicketOrderPassengerDetail) GetIdType() int32 {
	if x != nil {
		return x.IdType
	}
	return 0
}

func (x *TicketOrderPassengerDetail) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *TicketOrderPassengerDetail) GetTicketType() int32 {
	if x != nil {
		return x.TicketType
	}
	return 0
}

func (x *TicketOrderPassengerDetail) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TicketOrderPassengerDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TicketOrderPassengerDetail) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

var File_order_order_service_proto protoreflect.FileDescriptor

var file_order_order_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3c, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x22, 0x85,
	0x01, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a, 0x17, 0x50, 0x61, 0x67, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xc4, 0x02, 0x0a, 0x11, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a,
	0x10, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x62, 0x0a, 0x1a,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x22, 0x85, 0x01, 0x0a, 0x1b, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x22, 0x91, 0x03, 0x0a, 0x15, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xaa, 0x03, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x10, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xb7, 0x02, 0x0a, 0x15, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x19, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x31, 0x0a, 0x15, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x6e, 0x22, 0x60, 0x0a, 0x16, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x69, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x22, 0x61, 0x0a, 0x17, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x02, 0x0a,
	0x1a, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xd3, 0x06, 0x0a, 0x0c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9d, 0x01, 0x0a,
	0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x27, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x7e, 0x0a, 0x0f,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x8f, 0x01, 0x0a,
	0x13, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2b, 0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x89,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a,
	0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x7f, 0x0a, 0x0e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0f,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x63,
	0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x42, 0x1f, 0x5a, 0x1d, 0x2e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_order_service_proto_rawDescOnce sync.Once
	file_order_order_service_proto_rawDescData = file_order_order_service_proto_rawDesc
)

func file_order_order_service_proto_rawDescGZIP() []byte {
	file_order_order_service_proto_rawDescOnce.Do(func() {
		file_order_order_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_order_service_proto_rawDescData)
	})
	return file_order_order_service_proto_rawDescData
}

var file_order_order_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_order_order_service_proto_goTypes = []any{
	(*QueryTicketOrderByOrderSnRequest)(nil),  // 0: order.QueryTicketOrderByOrderSnRequest
	(*QueryTicketOrderByOrderSnResponse)(nil), // 1: order.QueryTicketOrderByOrderSnResponse
	(*PageTicketOrderRequest)(nil),            // 2: order.PageTicketOrderRequest
	(*PageTicketOrderResponse)(nil),           // 3: order.PageTicketOrderResponse
	(*PageTicketOrderData)(nil),               // 4: order.PageTicketOrderData
	(*TicketOrderDetail)(nil),                 // 5: order.TicketOrderDetail
	(*PageSelfTicketOrderRequest)(nil),        // 6: order.PageSelfTicketOrderRequest
	(*PageSelfTicketOrderResponse)(nil),       // 7: order.PageSelfTicketOrderResponse
	(*PageSelfTicketOrderData)(nil),           // 8: order.PageSelfTicketOrderData
	(*SelfTicketOrderDetail)(nil),             // 9: order.SelfTicketOrderDetail
	(*CreateTicketOrderRequest)(nil),          // 10: order.CreateTicketOrderRequest
	(*TicketOrderCreateItem)(nil),             // 11: order.TicketOrderCreateItem
	(*CreateTicketOrderResponse)(nil),         // 12: order.CreateTicketOrderResponse
	(*CloseTickOrderRequest)(nil),             // 13: order.CloseTickOrderRequest
	(*CloseTickOrderResponse)(nil),            // 14: order.CloseTickOrderResponse
	(*CancelTickOrderRequest)(nil),            // 15: order.CancelTickOrderRequest
	(*CancelTickOrderResponse)(nil),           // 16: order.CancelTickOrderResponse
	(*TicketOrderPassengerDetail)(nil),        // 17: order.TicketOrderPassengerDetail
}
var file_order_order_service_proto_depIdxs = []int32{
	5,  // 0: order.QueryTicketOrderByOrderSnResponse.data:type_name -> order.TicketOrderDetail
	4,  // 1: order.PageTicketOrderResponse.data:type_name -> order.PageTicketOrderData
	5,  // 2: order.PageTicketOrderData.records:type_name -> order.TicketOrderDetail
	17, // 3: order.TicketOrderDetail.passengerDetails:type_name -> order.TicketOrderPassengerDetail
	8,  // 4: order.PageSelfTicketOrderResponse.data:type_name -> order.PageSelfTicketOrderData
	9,  // 5: order.PageSelfTicketOrderData.records:type_name -> order.SelfTicketOrderDetail
	11, // 6: order.CreateTicketOrderRequest.ticketOrderItems:type_name -> order.TicketOrderCreateItem
	0,  // 7: order.OrderService.QueryTicketOrderByOrderSn:input_type -> order.QueryTicketOrderByOrderSnRequest
	2,  // 8: order.OrderService.PageTicketOrder:input_type -> order.PageTicketOrderRequest
	6,  // 9: order.OrderService.PageSelfTicketOrder:input_type -> order.PageSelfTicketOrderRequest
	10, // 10: order.OrderService.CreateTicketOrder:input_type -> order.CreateTicketOrderRequest
	13, // 11: order.OrderService.CloseTickOrder:input_type -> order.CloseTickOrderRequest
	15, // 12: order.OrderService.CancelTickOrder:input_type -> order.CancelTickOrderRequest
	1,  // 13: order.OrderService.QueryTicketOrderByOrderSn:output_type -> order.QueryTicketOrderByOrderSnResponse
	3,  // 14: order.OrderService.PageTicketOrder:output_type -> order.PageTicketOrderResponse
	7,  // 15: order.OrderService.PageSelfTicketOrder:output_type -> order.PageSelfTicketOrderResponse
	12, // 16: order.OrderService.CreateTicketOrder:output_type -> order.CreateTicketOrderResponse
	14, // 17: order.OrderService.CloseTickOrder:output_type -> order.CloseTickOrderResponse
	16, // 18: order.OrderService.CancelTickOrder:output_type -> order.CancelTickOrderResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_order_order_service_proto_init() }
func file_order_order_service_proto_init() {
	if File_order_order_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_order_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_order_service_proto_goTypes,
		DependencyIndexes: file_order_order_service_proto_depIdxs,
		MessageInfos:      file_order_order_service_proto_msgTypes,
	}.Build()
	File_order_order_service_proto = out.File
	file_order_order_service_proto_rawDesc = nil
	file_order_order_service_proto_goTypes = nil
	file_order_order_service_proto_depIdxs = nil
}
